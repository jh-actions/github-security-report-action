import { QuerySecurityVulnerabilityResultNode } from "../dependencies/graphql-queries";
import { DependencySecurityAdvisory } from "./DependencySecurityAdvisory";
import { DependencySecurityVulnerability } from "./DependencySecurityVulneraility";

export type DismissedBy = {
  user: {
    login: string,
    name: string,
  },
  reason: string,
  at: string
};

export type VulnerableSource = {
  manifest: string,
  version: string,
  path: string,
}


export class DependencyVulnerability {

  private readonly data: QuerySecurityVulnerabilityResultNode;

  private readonly dataVulnerability: DependencySecurityVulnerability;

  private readonly dataAdvisory: DependencySecurityAdvisory;

  constructor(data: QuerySecurityVulnerabilityResultNode) {
    this.data = data;
    this.dataVulnerability = new DependencySecurityVulnerability(data.securityVulnerability);
    this.dataAdvisory = new DependencySecurityAdvisory(data.securityAdvisory);
  }

  get created(): string {
    return this.data.createdAt;
  }

  get isDismissed(): boolean {
    return !!this.data.dismisser;
  }

  get dismissedBy(): DismissedBy | undefined {
    if (this.data.dismisser) {
      const result = {
        user: {
          login: this.data.dismisser.login,
          name: this.data.dismisser.name
        }
      };

      if (this.data.dismissReason) {
        result['reason'] = this.data.dismissReason;
      }

      if (this.data.dismissedAt) {
        result['at'] = this.data.dismissedAt;
      }
      //@ts-ignore
      return result;
    }
    return undefined;
  }

  get severity(): string {
    return this.data.securityVulnerability.severity;
  }

  get vulnerability(): DependencySecurityVulnerability {
    return this.dataVulnerability;
  }

  get advisory(): DependencySecurityAdvisory {
    return this.dataAdvisory;
  }

  // TODO maybe have this as a convenience data construct, but it all comes from the vulnerabiity
  // get source(): VulnerableSource {
  //   return {
  //     manifest: this.data.vulnerableManifestFilename,
  //     version: this.data.vulnerableRequirements,
  //     path: this.data.vulnerableManifestPath
  //   };
  // }

  get published(): string {
    return this.advisory.published;
  }

  get link(): string {
    return this.advisory.permalink;
  }
}